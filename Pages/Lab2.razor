@page "/lab2"

<style>
    input::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }

    input[type=number] {
        -moz-appearance: textfield;
    }
</style>


<h3>Lab 2</h3>

<EditForm Model="@test" class="form-horizontal">
    <div class="form-group">
        <h5>Input:</h5>
        <label class="control-label col-sm-2">
            Real part:
            <InputNumber @bind-Value="complex1.Realna" DisplayName="Real part" class="form-control" placeholder="Real part" />
        </label>
        <label class="control-label col-sm-2">
            Imaginary part:
            <InputNumber @bind-Value="complex1.Imaginarni" DisplayName="Imaginary part" class="form-control" placeholder="Imaginary part" />
        </label>
    </div>
    <div class="form-group">
        <label class="control-label col-sm-2">
            Real part:
            <InputNumber @bind-Value="complex2.Realna" DisplayName="Real part" class="form-control" placeholder="Real part" />
        </label>
        <label class="control-label col-sm-2">
            Imaginary part:
            <InputNumber @bind-Value="complex2.Imaginarni" DisplayName="Imaginary part" class="form-control" placeholder="Imaginary part" />
        </label>
    </div>
    <div class="form-group">
        <h5>Expected result:</h5>
        <label class="control-label col-sm-2">
            Real part:
            <InputNumber @bind-Value="expected.Realna" DisplayName="Real part" class="form-control" placeholder="Real part" />
        </label>
        <label class="control-label col-sm-2">
            Imaginary part:
            <InputNumber @bind-Value="expected.Imaginarni" DisplayName="Imaginary part" class="form-control" placeholder="Imaginary part" />
        </label>
    </div>

</EditForm>

<p>@Lab2_Classes.TestComplex.Test(complex1 + complex2, expected, "Addition")</p>
<p>@Lab2_Classes.TestComplex.Test(complex1 - complex2, expected, "Subtraction")</p>
<p>@Lab2_Classes.TestComplex.Test(complex1 * complex2, expected, "Multiplication")</p>
<p>@Lab2_Classes.TestComplex.Test(complex1 / complex2, expected, "Division")</p>
<p>@Lab2_Classes.TestComplex.Test(-complex1, expected, "Negative")</p>
<p>@Lab2_Classes.TestComplex.Test(complex1.conjugate(), expected, "Conjugate")</p>
<p>Modus: @complex1.modus()</p>
<p>Argument: @complex1.argument()</p>
<p>Equals: @((complex1 == complex2) ? true : false)</p>
<p>Not equals: @((complex1 != complex2) ? true : false)</p>


@code {

    Lab2_Classes.TestComplex test = new Lab2_Classes.TestComplex();

    Lab2_Classes.Complex complex1 = new Lab2_Classes.Complex();
    Lab2_Classes.Complex complex2 = new Lab2_Classes.Complex();
    Lab2_Classes.Complex expected = new Lab2_Classes.Complex();
}

